# Created by https://www.toptal.com/developers/gitignore/api/macos
# Edit at https://www.toptal.com/developers/gitignore?templates=macos

### macOS ###
# General
.DS_Store
.AppleDouble
.LSOverride
*.pyc
.tox/
*.egg-info/
.idea/
virtualenv_run/
.coverage
.ipynb/

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# End of https://www.toptal.com/developers/gitignore/api/macos
#
#

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints


# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/
#
#
# Node.js dependencies
node_modules/
npm-debug.log*
yarn-error.log
pnpm-debug.log*

# Python dependencies
__pycache__/
*.py[cod]
*.pyo
*.pyd
*.whl
.venv/
env/
ENV/
*.egg-info/
dist/
build/
*.log

# Logs
logs/
*.log
*.out
*.err
*.pid
*.gz
*.txt
debug.log
stacktrace.log

# Environment variables
.env
.env.local
.env.*.local

# Build directories
/dist/
/build/
/public/assets/
/staticfiles/

# OS-specific files
.DS_Store
Thumbs.db
desktop.ini
.idea/
.vscode/
*.swp
*.swo

# IDE/Editor specific files
*.iml
*.ipr
*.iws
*.sublime-project
*.sublime-workspace

# Dependency directories
node_modules/
bower_components/
jspm_packages/

# Temporary files and folders
*.tmp
*.temp
*.cache
*.bak
*.orig
*.swp
*.swo
*.seed
*.pid
*.pid.lock

# Coverage reports
coverage/
*.lcov

# Lint and formatting
.eslintcache
.prettiercache

# Testing
/pytest_cache/
/junit-*.xml
coverage.xml
.nyc_output/
test-results/

# Database files
*.sqlite3
*.db
*.db-journal

# Docker
docker-compose.override.yml
docker-compose.override.*.yml
docker-compose.*.yaml
*.tar
*.lock

# Ignore compiled code
*.class
*.o
*.so
*.dll
*.exe

# Ignore package management files
package-lock.json
yarn.lock
pnpm-lock.yaml

# AWS/Cloud specific
.aws/
.terraform/
.terraform.lock.hcl

# Generated API files
*.swagger
*.api.json
*.api.yaml

# Custom application generated files
output/
logs/
serial-data/

# Other specific ignores
*.crt
*.pem
*.key

# Ignore production secrets
secrets/
*.secret
*.key
*.pfx

